<?xml version="1.0"?>
<robot name="turtlebot3_burger_sim" xmlns:xacro="http://ros.org/wiki/xacro">
  <xacro:arg name="imu_visual" default="false"/>
  <xacro:arg name="laser_visual" default="true"/>
  <xacro:arg name="robot_name" default="" />
  
  <xacro:property name="yaml_file" value="$(find nuturtle_description)/config/sensor_params.yaml" />
  <xacro:property name="sensor_props" value="${xacro.load_yaml(yaml_file)}"/>

  <xacro:property name="robot_yaml_file" value="$(find nuturtle_description)/config/diff_drive_params.yaml" />
  <xacro:property name="robot_props" value="${xacro.load_yaml(robot_yaml_file)}"/>

  <gazebo reference="base_link">
    <material>Gazebo/DarkGrey</material>
  </gazebo>

  <gazebo reference="wheel_left_link">
    <mu1>0.1</mu1>
    <mu2>0.1</mu2>
    <kp>500000.0</kp>
    <kd>10.0</kd>
    <minDepth>0.001</minDepth>
    <maxVel>0.1</maxVel>
    <fdir1>1 0 0</fdir1>
    <material>Gazebo/FlatBlack</material>
  </gazebo>

  <gazebo reference="wheel_right_link">
    <mu1>0.1</mu1>
    <mu2>0.1</mu2>
    <kp>500000.0</kp>
    <kd>10.0</kd>
    <minDepth>0.001</minDepth>
    <maxVel>0.1</maxVel>
    <fdir1>1 0 0</fdir1>
    <material>Gazebo/FlatBlack</material>
  </gazebo>

  <gazebo reference="caster_back_link">
    <mu1>0.1</mu1>
    <mu2>0.1</mu2>
    <kp>1000000.0</kp>
    <kd>100.0</kd>
    <minDepth>0.001</minDepth>
    <maxVel>1.0</maxVel>
    <material>Gazebo/FlatBlack</material>
  </gazebo>

  <gazebo reference="imu_link">
    <sensor type="imu" name="imu">
      <always_on>true</always_on>
      <visualize>$(arg imu_visual)</visualize>
    </sensor>
    <material>Gazebo/FlatBlack</material>
  </gazebo>

  <gazebo>
    <plugin name="turtle_drive_plugin" filename="libnuturtle_gazebo_plugin.so">
      <wheel_radius>${robot_props.wheel_radius}</wheel_radius>
      <robot_base>${robot_props.wheel_base}</robot_base>
      <left_wheel_joint>wheel_left_joint</left_wheel_joint>
      <right_wheel_joint>wheel_right_joint</right_wheel_joint>
      <encoder_pub_frequency>${robot_props.encoder_frequency}</encoder_pub_frequency>
      <cmd_vel_topic>$(arg robot_name)/cmd_vel</cmd_vel_topic>
      <encoder_topic>$(arg robot_name)/joint_states</encoder_topic>
      <motor_torque_max>10</motor_torque_max>
      <motor_rot_max>6.35492</motor_rot_max>

      <!--<commandTopic>cmd_vel</commandTopic>
      <odometryTopic>odom</odometryTopic>
      <odometryFrame>odom</odometryFrame>
      <odometrySource>world</odometrySource>
      <publishOdomTF>true</publishOdomTF>
      <robotBaseFrame>base_footprint</robotBaseFrame>
      <publishWheelTF>false</publishWheelTF>
      <publishTf>true</publishTf>
      <publishWheelJointState>true</publishWheelJointState>
      <legacyMode>false</legacyMode>
      <updateRate>30</updateRate>
      <leftJoint>wheel_left_joint</leftJoint>
      <rightJoint>wheel_right_joint</rightJoint>
      <wheelSeparation>0.160</wheelSeparation>
      <wheelDiameter>0.066</wheelDiameter>
      <wheelAcceleration>1</wheelAcceleration>
      <wheelTorque>10</wheelTorque>
      <rosDebugLevel>na</rosDebugLevel>-->
    </plugin>
  </gazebo>

  <!--<gazebo>
    <plugin name="imu_plugin" filename="libgazebo_ros_imu.so">
      <alwaysOn>true</alwaysOn>
      <bodyName>imu_link</bodyName>
      <frameName>imu_link</frameName>
      <topicName>imu</topicName>
      <serviceName>imu_service</serviceName>
      <gaussianNoise>0.0</gaussianNoise>
      <updateRate>0</updateRate>
      <imu>
        <noise>
          <type>gaussian</type>
          <rate>
            <mean>0.0</mean>
            <stddev>2e-4</stddev>
            <bias_mean>0.0000075</bias_mean>
            <bias_stddev>0.0000008</bias_stddev>
          </rate>
          <accel>
            <mean>0.0</mean>
            <stddev>1.7e-2</stddev>
            <bias_mean>0.1</bias_mean>
            <bias_stddev>0.001</bias_stddev>
          </accel>
        </noise>
      </imu>
    </plugin>
  </gazebo>-->

  <gazebo reference="base_scan">
    <material>Gazebo/FlatBlack</material>
    <sensor type="gpu_ray" name="lds_lfcd_sensor">
      <pose>0 0 0 0 0 0</pose>
      <visualize>$(arg laser_visual)</visualize>
      <update_rate>${sensor_props.laser_update_rate}</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>360</samples>
            <resolution>1</resolution>
            <min_angle>0.0</min_angle>
            <max_angle>6.28319</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.120</min>
          <max>${sensor_props.laser_max_range}</max>
          <resolution>0.015</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>${sensor_props.laser_stddev}</stddev>
        </noise>
      </ray>
        <plugin name="gazebo_ros_lds_lfcd_controller" 
                    filename="libgazebo_ros_gpu_laser.so">
        <topicName>scan</topicName>
        <frameName>/$(arg robot_name)/base_scan</frameName>
      </plugin>
    </sensor>
  </gazebo>

</robot>
